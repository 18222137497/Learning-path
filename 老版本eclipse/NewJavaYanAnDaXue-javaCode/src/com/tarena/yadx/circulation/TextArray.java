package com.tarena.yadx.circulation;

public class TextArray {
	public static void main(String[] args){
		
		/*
		 * 一，什么是数组
		 *   1.程序=算法+数据结构
		 *   2.所谓数据结构，简单来说就是吧数据按照某种特定的结构来保存，设计合理的数据结构是解决问题的前提
		 *   3.数组就是最基本的数据结构
		 *   4.相同类型的元素组成的集合
		 *   5.元素按线性排列。所谓线性排列是指除第一个元素之外，每一个元素都有唯一的前驱元素；出最后一个元素之外，每一个元素都有唯一的后继元素
		 *   6.可以通过元素所在位置的顺序号（下标）做标识来访问每一个元素（下标从0开始到length-1结束）
		 * 二，数组的定义
		 *   1.声明数组语法
		 *      数据类型【】 数组名=new 数据类型【大小】；
		 *   3.定义基本类型数组的要点：
		 *    -确切的数据类型
		 *    -整体的数组名字
		 *    -不能缺少[]
		 *   4.执行new语句才使得数组分配到了制定大小的空间
		 *   5.int[] arr和int arr[]都可以
		 *   6.声明数组时，不规定数组长度，new关键字分配空间时需要制定分配空间大小   
		 * 三，初始化数组
		 *   1.基本类型数组创建后，其元素的初始值为：byte,short,char,int,long为0；float和double0.0;boolean为false
		 *   2.可以在数组声明的同时对数组元素进行初始化
		 *   例如：int[] arr={152,515,1515,51};
		 *   元素个数极为数组长度
		 *   3.注意：此种方式只能用于声明时初始化，不能用于赋值，如下面代码会有编译错误：
		 *   int[] arr;
		 *   arr = {212,1521,1251,1125}   
		 *   4.可以通过下面的方法给已经声明的数组类型变量进行初始化
		 *       int[] arr;
		 *       arr=new int[]{1,2,3};
		 *      注意：[]里可以不标定长度，元素的个数就是数组的长度
		 *四，数组的访问      
		 *   1.length获取数组长度 
		 *   2.通过下标访问数组
		 *       数组中的元素通过下标的方式可以进行访问，下标从0开始最大到length-1
		 *   3.遍历数组元素
		 *       遍历数组元素通常选择for循环，循环变量作为访问数组元素的下标，即可访问数组中的每一个元素
		 *           
		 */
//		int[] arr=new int[]{23,65,42,48,97,2};
//		
//		for (int i = 0; i < arr.length; i++) {
//			if(arr[i]>arr[i+1]){
//				arr[i+1]=arr[i];
//			}else{
//				break;
//			}
//			
//		}
//		System.out.println(arr[arr.length-1]);
//		

		
		
	}
	

}

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--配置properties
        可以在标签内部配置连接数据库的信息，也可以通过属性引用外部配置文件信息
        resource属性：常用的
            用于指定配置文件的位置，是按照类路径的写法来写，并且必须存在于类路径下
        url属性：
            是要求按照Url的写法，来写地址
            URL：Uniform Resource Locator 统一资源定位符。他是可以唯一标识一个资源的位置
            写法：
                http://localhost:8080/mybatis/demo1
                协议     主机    端口号  uri
            URI：Uniform Resource Identifier 统一资源标识符。他是在应用中可以唯一定位一个资源的
    -->
    <properties resource="jdbcConfig.properties"></properties>
    <!--起别名-->
    <typeAliases>
<!--        typeAlias 用于配置别名，type属性指定的是实体类全限定类名，alias属性指定别名，当指定了别名之后就不区分大小写了-->
<!--        <typeAlias type="org.example.domain.User" alias="user"></typeAlias>-->
        <!--参数传domain，里面的所有实体类都会自动被取别名，类名就是别名，而且不区分大小写了-->
<!--        <package name="org.example.domain"/>-->
    </typeAliases>
    <environments default="mysql">
        <environment id="mysql">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="POOLED">
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>
    <mappers>
        <!--package标签是用于指定dao接口所在的包，当指定了之后就不再需要写mapper以及resource或者class了-->
        <!--<package name="org.example.dao"/>-->
        <mapper resource="org/example/dao/UserDao.xml"></mapper>
    </mappers>
</configuration>